var documenterSearchIndex = {"docs":
[{"location":"man/power_system/model/#powerSystemModel","page":"Power System","title":"Power System Model","text":"","category":"section"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"The JuliaGrid supports the main composite type PowerSystem to preserve power system data, with fields:","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"bus\nbranch\ngenerator\nacModel\ndcModel\nbasePower.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"The fields bus, branch, generator hold the data related with buses, branches and generators, respectively. Subtypes acModel and dcModel store vectors and matrices obtained based on the power system topology and parameters. The base power of the system is kept in the field basePower, given in volt-ampere unit.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"The function powerSystem() returns the main composite type PowerSystem with all subtypes.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"JuliaGrid supports three modes of forming the power system model:","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"using built-in functions,\nusing HDF5 file format,\nusing Matpower case files.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"Note that, in the case of large-scale systems, we strongly recommend to use the HDF5 file format for the input. Therefore, JuliaGrid has the function that any system loaded from Matpower case files or a system formed using built-in functions can be saved in the HDF5 format.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"The HDF5 file format contains three groups: bus, branch and generator. In addition, the file contains basePower variable, given in volt-ampere. Each group is divided into subgroups that gather the same type of physical quantities, with the corresponding datasets. Note that, dataset names are identical to the keywords, which are used when the power system model is formed using built-in functions.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"<hr style=\"border:1px solid #CBCDCD; opacity: 0.5\">","category":"page"},{"location":"man/power_system/model/#busGroup","page":"Power System","title":"Bus Group","text":"","category":"section"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"The bus group is divided into four subgroups: layout, demand, shunt, and voltage. Each of the subgroups contains datasets that define features of the buses.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"Subgroup Dataset Description Unit Type\nlayout label unique bus label - positive integer\nlayout slackLabel bus label of the slack bus - positive integer\nlayout lossZone loss zone - positive integer\nlayout area area number - positive integer\ndemand active active power demand per-unit float\ndemand reactive reactive power demand per-unit float\nshunt conductance active power demanded of the shunt element at voltage magnitude equal to 1 per-unit per-unit float\nshunt susceptance reactive power injected of the shunt element at voltage magnitude equal to 1 per-unit per-unit float\nvoltage magnitude initial value of the voltage magnitude per-unit float\nvoltage angle initial value of the voltage angle radian float\nvoltage minMagnitude minimum allowed voltage magnitude value per-unit float\nvoltage maxMagnitude maximum allowed voltage magnitude value per-unit float\nvoltage base base value of the voltage magnitude volt float","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"<hr style=\"border:1px solid #CBCDCD; opacity: 0.5\">","category":"page"},{"location":"man/power_system/model/#branchGroup","page":"Power System","title":"Branch Group","text":"","category":"section"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"The branch group is divided into four subgroups: layout, parameter, voltage, and rating. Each of the subgroups contains datasets that define features of the branches.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"Subgroup Dataset Description Unit Type\nlayout label unique branch label - positive integer\nlayout from from bus label (corresponds to the bus label) - positive integer\nlayout to to bus label (corresponds to the bus label) - positive integer\nlayout status operating status of the branch, in-service = 1, out-of-service = 0 - zero-one integer\nparameter resistance branch resistance per-unit float\nparameter reactance branch reactance per-unit float\nparameter susceptance total line charging susceptance per-unit float\nparameter turnsRatio transformer off-nominal turns ratio, equal to zero for a line - float\nparameter shiftAngle transformer phase shift angle where positive value defines delay radian float\nvoltage minAngleDifference minimum allowed voltage angle difference value between from and to bus radian float\nvoltage maxAngleDifference maximum allowed voltage angle difference value between from and to bus radian float\nrating shortTerm short term rating (equal to zero for unlimited) per-unit float\nrating longTerm long term rating (equal to zero for unlimited) per-unit float\nrating emergency emergency rating (equal to zero for unlimited) per-unit positive integer","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"<hr style=\"border:1px solid #CBCDCD; opacity: 0.5\">","category":"page"},{"location":"man/power_system/model/#generatorGroup","page":"Power System","title":"Generator Group","text":"","category":"section"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"The generator group is divided into six subgroups: layout, output, voltage, capability, ramRate, and cost. Each of the subgroups contains datasets that define features of the generators.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"Subgroup Dataset Description Unit Type\nlayout label unique generator label - positive integer\nlayout bus bus label to which the generator is connected - positive integer\nlayout status operating status of the generator, in-service = 1, out-of-service = 0 - zero-one integer\nlayout area area participation factor - float\noutput active output active power of the generator per-unit float\noutput reactive output reactive power of the generator per-unit float\nvoltage magnitude voltage magnitude setpoint per-unit float\ncapability minActive minimum allowed output active power value of the generator per-unit float\ncapability maxActive maximum allowed output active power value of the generator per-unit float\ncapability minReactive minimum allowed output reactive power value of the generator per-unit float\ncapability maxReactive maximum allowed output reactive power value of the generator per-unit float\ncapability lowerActive lower allowed active power output value of PQ capability curve per-unit float\ncapability minReactiveLower minimum allowed reactive power output value at lowerActive value per-unit float\ncapability maxReactiveLower maximum allowed reactive power output value at lowerActive value per-unit float\ncapability upperActive upper allowed active power output value of PQ capability curve per-unit float\ncapability minReactiveUpper minimum allowed reactive power output value at upperActive value per-unit float\ncapability maxReactiveUpper maximum allowed reactive power output value at upperActive value per-unit float\nrampRate loadFollowing ramp rate for load following/AGC per-unit/minute float\nrampRate reserve10minute ramp rate for 10-minute reserves per-unit float\nrampRate reserve30minute ramp rate for 30-minute reserves per-unit float\nrampRate reactiveTimescale ramp rate for reactive power (two seconds timescale) per-unit/minute float\ncost activeModel active power cost model, piecewise linear = 1, polynomial = 2 - one-two integer\ncost activeStartup active power startup cost currency float\ncost activeShutdown active power shutdown cost currency float\ncost activeDataPoint number of data points for active power cost model - positive integer\ncost activeCoefficient coefficients for forming the active power cost function (*) float\ncost reactiveModel reactive power cost model, piecewise linear = 1, polynomial = 2 - one-two integer\ncost reactiveStartup reactive power startup cost currency float\ncost reactiveShutdown reactive power shutdown cost currency float\ncost reactiveDataPoint number of data points for reactive power cost model - positive integer\ncost reactiveCoefficient coefficients for forming the reactive power cost function (*) float","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"The interpretation of the datasets activeCoefficient and reactiveCoefficient, given as matrices, depends on the activeModel and reactiveModel that is selected:","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"piecewise linear cost model is defined according to input-output points, where the i-th row of the matrix is given as:\nactiveCoefficient: p_1 f(p_1) p_2 f(p_2) dots p_n f(p_n),\nreactiveCoefficient: q_1 f(q_1) q_2 f(q_2) dots q_n f(q_n).\npolynomial cost model is defined using the n-th degree polynomial, where the i-th row of the matrix is given as:\nactiveCoefficient: a_n dots a_1 a_0 to define f(p) = a_n p^n + dots + a_1 p + a_0,\nreactiveCoefficient: b_n dots b_1 b_0 to define f(q) = b_n q^n + dots + b_1 q + b_0.","category":"page"},{"location":"man/power_system/model/","page":"Power System","title":"Power System","text":"(*) Thus, for the piecewise linear model p_i and q_i are given in per-unit, while f(p_i) and f(q_i) have a dimension of currency/hour. In the polynomial model coefficients are dimensionless.","category":"page"},{"location":"#JuliaGrid","page":"Home","title":"JuliaGrid","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"JuliaGrid is an open-source, easy-to-use simulation tool/solver for researchers and educators provided as a Julia package, with source code released under MIT License. JuliaGrid is inspired by the Matpower, an open-source steady-state power system solver, and allows a variety of display and manipulation options.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The software package, among other things, includes:","category":"page"},{"location":"","page":"Home","title":"Home","text":"AC power flow analysis,\nDC power flow analysis,\nDC optimal power flow analysis,\nnon-linear state estimation,\nlinear DC state estimation,\nlinear state estimation with PMUs,\nleast absolute value state estimation,\nbad data processing,\nobservability analysis,\noptimal PMU placement.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Main-Features","page":"Home","title":"Main Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Features supported by JuliaGrid can be categorised into four main groups:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Power Flow - executive function runpf() - performs the AC and DC power flow analysis,\nOptimal Power Flow - executive function runopf() - performs the DC and AC optimal power flow analysis,\nState Estimation - executive function runse() - performs non-linear, DC and PMU state estimation,\nStandalone Measurement Generator - executive function runmg() - generates a set of measurements.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"JuliaGrid requires Julia 1.3 and higher. To install JuliaGrid package, run the following command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"# pkg> add https://github.com/mcosovic/JuliaGrid.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"To load the package, use the command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using JuliaGrid","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Quick-Start-Power-Flow","page":"Home","title":"Quick Start Power Flow","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"results, system, info = runpf(\"dc\", \"case14.h5\", \"main\", \"flow\", \"generation\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"results, = runpf(\"nr\", \"case14.xlsx\", \"main\"; max = 20, stop = 1.0e-8)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Quick-Start-Optimal-Power-Flow","page":"Home","title":"Quick Start Optimal Power Flow","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"results, system, info = runopf(\"case118.h5\", \"dc\", \"main\", \"flow\", \"generation\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Quick-Start-State-Estimation","page":"Home","title":"Quick Start State Estimation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"results, = runse(\"case14se.xlsx\", \"nonlinear\", \"main\", \"estimate\"; start = \"warm\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"results, = runse(\"case30se.h5\", \"dc\", \"estimate\"; bad = [\"pass\" 2 \"threshold\" 3.5])","category":"page"},{"location":"","page":"Home","title":"Home","text":"results, = runse(\"case14se.xlsx\", \"pmu\", \"main\", \"estimate\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Quick-Start-Measurement-Generator","page":"Home","title":"Quick Start Measurement Generator","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"measurements, system, info = runmg(\"case14.h5\"; pmuset = \"optimal\", pmuvariance = [\"complete\" 1e-5])","category":"page"},{"location":"","page":"Home","title":"Home","text":"measurements, = runmg(\"case14.h5\"; legacyset = [\"redundancy\" 3.1], legacyvariance = [\"complete\" 1e-4])","category":"page"}]
}
