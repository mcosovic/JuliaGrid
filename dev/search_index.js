var documenterSearchIndex = {"docs":
[{"location":"man/flow/#Power-Flow-1","page":"Power Flow","title":"Power Flow","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The function runs the AC and DC power flow analysis, where reactive power constraints can be used for the AC power flow analysis.","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The AC power flow analysis includes four different algorithms:","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"Newton-Raphson,\nGauss-Seidel,\nXB fast decoupled Newton-Raphson,\nBX fast decoupled Newton-Raphson.","category":"page"},{"location":"man/flow/#The-Data-Structure-1","page":"Power Flow","title":"The Data Structure","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The JuliaGrid works with h5 or xlsx extensions as input files, with variables bus, generator, branch, and basePower. JuliaGrid is using the same data format as Matpower, with the exception of the first column in the branch data.","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The minimum amount of information within an instance of the data structure required to run the module requires a bus and branch data.","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"First, the system base power is defined in (MVA) using basePower, and in the following, we describe the structure of other variables involved in the input file.","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The bus data structure:","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"Column Description Type Unit\n1 bus number positive integer \n2 bus type pq(1), pv(2), slack(3) \n3 demand active power MW\n4 demand reactive power MVAr\n5 shunt conductance active power MW\n6 shunt susceptance reactive power MVAr\n7 area positive integer \n8 initial voltage magnitude per-unit\n9 initial voltage angle deg\n10 base voltage magnitude kV\n11 loss zone positive integer \n12 minimum voltage magnitude per-unit\n13 maximum voltage magnitude per-unit","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The generator data structure:","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"Column Description Type Unit\n1 bus number positive integer \n2 generation active power MW\n3 generation reactive power MVAr\n4 maximum generation reactive power MVAr\n5 minimum generation reactive power MVAr\n6 voltage magnitude per-unit\n7 base power MVA\n8 status positive integer \n9 maximum generation active power MW\n10 minimum generation active power MW\n11 lower of pq curve active power MW\n12 upper of pq curve active power MW\n13 minimum at pc1 reactive power MVAr\n14 maximum at pc1 reactive power MVAr\n15 minimum at pc2 reactive power MVAr\n16 maximum at pc2 reactive power MVAr\n17 ramp rate acg active power per minut MW/min\n18 ramp rate 10 active power MW\n19 ramp rate 30 active power MW\n20 ramp rate Q reactive power per minut MVAr/min\n21 area factor positive integer ","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The branch data structure:","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"Column Description Type Unit\n1 branch number positive integer \n2 from bus number positive integer \n3 to bus number positive integer \n4 series parameter resistance per-unit\n5 series parameter reactance per-unit\n6 charging parameter susceptance per-unit\n7 long term rate power MVA\n8 short term rate power MVA\n9 emergency rate power MVA\n10 transformer turns ratio \n11 transformer shift angle deg\n12 status positive integer \n13 minimum voltage difference angle deg\n14 maximum voltage difference angle deg","category":"page"},{"location":"man/flow/#Use-Cases-1","page":"Power Flow","title":"Use Cases","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The predefined cases are located in the src/data as the h5-file or xlsx-file.","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"Case Grid Buses Shunts Generators Branches\ncase3 transmission 3 0 1 3\ncase5 transmission 5 0 5 6\ncase5nptel transmission 5 0 1 7\ncase6 transmission 6 0 2 7\ncase6wood transmission 6 0 3 11\ncase9 transmission 9 0 3 9\ncase14 transmission 14 1 5 20\ncase_ieee30 transmission 30 2 6 41\ncase30 transmission 30 2 15 45\ncase47 distribution 47 4 5 46\ncase84 distribution 84 0 0 96\ncase118 transmission 118 14 54 186\ncase300 transmission 300 29 69 411\ncase1354pegase transmission 1354 1082 260 1991\ncase_ACTIVSg2000 transmission 2000 149 544 3206\ncase_ACTIVSg10k transmission 10000 281 2485 12706\ncase_ACTIVSg70k transmission 70000 3477 10390 88207","category":"page"},{"location":"man/flow/#Run-Settings-1","page":"Power Flow","title":"Run Settings","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The power flow settings should be given as input arguments of the function runpf. Although the syntax is given in a certain order, for methodological reasons, only DATA must appear, and the order of other inputs is arbitrary, as well as their appearance.","category":"page"},{"location":"man/flow/#Syntax-1","page":"Power Flow","title":"Syntax","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"runpf(DATA, METHOD);\nrunpf(DATA, METHOD, DISPLAY);\nrunpf(DATA, METHOD, DISPLAY; ACCONTROL);\nrunpf(DATA, METHOD, DISPLAY; ACCONTROL, SOLVE);\nrunpf(DATA, METHOD, DISPLAY; ACCONTROL, SOLVE, SAVE);","category":"page"},{"location":"man/flow/#Description-1","page":"Power Flow","title":"Description","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"runpf(DATA, METHOD) computes power flow problem\nrunpf(DATA, METHOD, DISPLAY) shows results in the terminal\nrunpf(DATA, METHOD, DISPLAY; ACCONTROL) sets variables for the AC power flow\nrunpf(DATA, METHOD, DISPLAY; ACCONTROL, SOLVE) sets the linear system solver\nrunpf(DATA, METHOD, DISPLAY; ACCONTROL, SOLVE, SAVE) exports results","category":"page"},{"location":"man/flow/#Output-1","page":"Power Flow","title":"Output","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"bus, branch, generator = runpf(...) returns results of the power flow analysis","category":"page"},{"location":"man/flow/#Examples-1","page":"Power Flow","title":"Examples","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"runpf(\"case14.h5\", \"nr\", \"main\", \"flow\", \"generator\");\nrunpf(\"case14.xlsx\", \"nr\", \"main\"; max = 10, stop = 1.0e-8);\nrunpf(\"case14.h5\", \"gs\", \"main\"; max = 500, stop = 1.0e-8, reactive = 1);\nrunpf(\"case14.h5\", \"dc\", \"main\"; solve = \"lu\", save = \"D:/case14results.xlsx\");","category":"page"},{"location":"man/flow/#Input-Variable-Number-of-Arguments-1","page":"Power Flow","title":"Input Variable Number of Arguments","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"DATA","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"Example Description\n\"case14.h5\" loads the power system data from the package\n\"case14.xlsx\" loads the power system data from the package\n\"C:/case14.xlsx\" loads the power system data from a custom path","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"METHOD","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"| Command | Description   | –- | –- |   |\"nr\"| runs the AC power flow analysis using Newton-Raphson algorithm   |\"gs\"| runs the AC power flow analysis using Gauss-Seidel algorithm   |\"fnrxb\"| runs the AC power flow analysis using XB fast Newton-Raphson algorithm   |\"fnrbx\"| runs the AC power flow analysis using BX fast Newton-Raphson algorithm   |\"dc\"| runs the DC power flow analysis","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"DISPLAY","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"| Command | Description   | –- | –- |   |\"main\"| shows main bus data display   |\"flow\"| shows power flow data display   |\"generator\"| shows generator data display","category":"page"},{"location":"man/flow/#Input-Keyword-Arguments-1","page":"Power Flow","title":"Input Keyword Arguments","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"ACCONTROL","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"| Command | Description   | –- | –- |   |max = value| specifies the maximum number of iterations for the AC power flow <br>  default setting: 100   |stop = value| specifies the stopping criteria for the AC power flow <br> default setting: 1.0e-8   |reactive = 1| forces reactive power constraints <br>  default setting: 0","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"SOLVE","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"| Command | Description   | –- | –- |   |solve = \"mldivide\"| mldivide linear system solver, default setting   |solve = \"lu\"| LU linear system solver","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"SAVE","category":"page"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"| Command | Description   | –- | –- |   |save = \"path/name.h5\"| saves results in the h5-file   |save = \"path/name.xlsx\"| saves results in the xlsx-file","category":"page"},{"location":"man/flow/#Flowchart-1","page":"Power Flow","title":"Flowchart","text":"","category":"section"},{"location":"man/flow/#","page":"Power Flow","title":"Power Flow","text":"The power flow flowchart depicts the algorithm process according to user settings. <img src=\"https://github.com/mcosovic/JuliaGrid/blob/master/doc/powerflow_chart.svg\" width=\"550\">","category":"page"},{"location":"#JuliaGrid-1","page":"Home","title":"JuliaGrid","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"JuliaGrid is an easy-to-use simulation tool for researchers and educators provided as a Julia package, with source code released under MIT License. JuliaGrid is inspired by Matpower and allows a variety of display and manipulation options.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"The software package, inter alia, includes:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"AC power flow analysis,\nDC power flow analysis,\nnon-linear state estimation,\nlinear DC state estimation,\nlinear state estimation with PMUs only,\nleast absolute value state estimation,\noptimal PMU placement,\nbad data processing.","category":"page"},{"location":"#Functions-1","page":"Home","title":"Functions","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"There are three main functions:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Power Flow - using the executive function runpf(...) runs the AC and DC power flow analysis;\nState Estimation - using the executive function runse(...) runs the non-linear, DC and PMU state estimation, where measurement variances and sets can be changed;\nStandalone Measurement Generator - using the executive function runmg(...) generates a set of measurements according to the AC power flow analysis.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"The package requires Julia 1.1 and higher, to install JuliaGrid package, you can run the following:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"pkg> add https://github.com/mcosovic/JuliaGrid","category":"page"},{"location":"#","page":"Home","title":"Home","text":"To load the package, use the command:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> using JuliaGrid","category":"page"},{"location":"#Quick-Start-Power-Flow-1","page":"Home","title":"Quick Start Power Flow","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"julia> bus, branch, generator = runpf(\"dc\", \"case14.h5, \"main\", \"flow\")\njulia> bus, branch, generator = runpf(\"nr\", \"case14.h5, \"main\"; max = 20, stop = 1.0e-8)","category":"page"}]
}
